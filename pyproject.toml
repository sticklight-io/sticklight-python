[project]
name = "sticklight"
version = "0.1.4"
description = "The Official Sticklight Python SDK"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiohttp[speedups]>=3.11.12",
    "requests>=2.32.3",
]


# Both tool.hatch settings are required for publishing to PyPI.
[tool.hatch.build]
packages = [
    "src/sticklight",
]

[tool.hatch.build.targets.wheel]
sources = [
    "src",
]
include = [
    "sticklight/**/*",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "ruff>=0.9.6",
]

[tool.ruff]
indent-width = 4
line-length = 80  # And not >=100 because the project is customer-facing.
output-format = "grouped"
target-version = "py311"
show-fixes = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401", # Unused import
  "I001", # Import block is un-sorted or un-formatted
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false


[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = true

# Mirrors platform repo.
[tool.ruff.lint]
select = [
  "A001",      # builtin-variable-shadowing (lint.flake8-builtins.builtins-ignorelist)
  "A002",      # builtin-argument-shadowing (lint.flake8-builtins.builtins-ignorelist)
  "A003",      # builtin-attribute-shadowing (lint.flake8-builtins.builtins-ignorelist)
  "A004",      # builtin-import-shadowing (lint.flake8-builtins.builtins-ignorelist)
  "A005",      # builtin-module-shadowing (lint.flake8-builtins.builtins-ignorelist). Requires --preview.
  "A006",      # builtin-lambda-argument-shadowing (lint.flake8-builtins.builtins-ignorelist). Requires --preview.
  "ARG001",    # Unused argument
  "ASYNC100",  # Cancel-scope-no-checkpoint
  "ASYNC109",  # Async-function-with-timeout
  "ASYNC110",  # Async-busy-wait
  "ASYNC115",  # Async-zero-sleep
  "ASYNC210",  # Blocking-http-call-in-async-function
  "ASYNC220",  # Create-subprocess-in-async-function
  "ASYNC221",  # Run-subprocess-in-async-function
  "ASYNC222",  # Wait-for-process-in-async-function
  "ASYNC230",  # Blocking-open-call-in-async-function
  "ASYNC251",  # Blocking-sleep-in-async-function
  "B003",      # Assignment to os.environ
  "B004",      # Unreliable-callable-check
  "B005",      # str.strip() with multi-character strings
  "B006",      # Mutable argument default (lint.flake8-bugbear.extend-immutable-calls)
  "B007",      # Unused loop control variable
  "B008",      # Function call in default argument (lint.flake8-bugbear.extend-immutable-calls)
  "B009",      # getattr with constant (use getattr for default or not at all)
  "B010",      # setattr with constant (just obj.attr = value idiomatically)
  "B012",      # Flow control in finally
  "B013",      # Redundant tuple in exception handler
  "B014",      # Duplicate exception handler (subclasses)
  "B018",      # Useless expression
  "B019",      # Cached instance method
  "B020",      # Loop variable overrides iterator
  "B021",      # f-string docstring
  "B022",      # Useless contextlib.suppress without arguments
  "B023",      # function-uses-loop-variable
  "B024",      # abstract-base-class-without-abstract-method
  "B025",      # duplicate-try-block-exception
  "B026",      # star-arg-unpacking-after-keyword-arg
  "B027",      # empty-method-without-abstract-decorator
  "B029",      # except-with-empty-tuple
  "B030",      # except-with-non-exception-classes
  "B031",      # reuse-of-groupby-generator
  "B032",      # unintentional-type-annotation
  "B033",      # duplicate-value-in-set
  "B034",      # re-sub-positional-args
  "B035",      # static-key-dict-comprehension
  "B039",      # mutable-contextvar-default
  "B901",      # return-in-generator. Requires --preview.
  "B905",      # zip-without-explicit-strict
  "B909",      # loop-iterator-mutation. Requires --preview.
  "BLE001",    # Broad exception catch
  "C40",       # unnecessary comprehensions and collections initialization
  "D201",      # No blank lines allowed before function docstring
  "D204",      # 1 blank line required after class docstring
  "D210",      # No whitespaces allowed surrounding docstring text
  "D211",      # No blank lines allowed before class docstring
  "D213",      # No """Return ...\n""" allowed in docstrings
  "DTZ",       # Date/Time Timezone pitfalls
  "E711",      # None comparison
  "E712",      # True False comparison
  "E713",      # Not in
  "E714",      # Not is
  "E721",      # type(...) ==
  "E902",      # IO Error. When Ruff can't read a file
  "EM102",     # f-string-in-exception
  "EM103",     # dot-format-in-exception
  "EXE001",    # shebang-not-executable
  "EXE004",    # shebang-leading-whitespace
  "EXE005",    # shebang-not-first-line
  "F401",      # Unused import
  "FAST001",   # FastAPI redundant response model
  "FAST002",   # FastAPI bad dependency definition
  "FBT001",    # Boolean positional type hint
  "FBT002",    # Boolean positional default value
  "FBT003",    # Boolean positional value in call
  "G",         # Logging calls pitfalls
  "I",         # Unsorted imports
  "ISC001",    # Single-line-implicit-string-concatenation. LMK(!) if formatter CAUSES (writes) code that violates this rule.
  "ISC002",    # multi-line-implicit-string-concatenation. LMK(!) if formatter CAUSES (writes) code that violates this rule.
  "LOG001",    # direct-logger-instantiation
  "LOG002",    # invalid-get-logger-argument
  "LOG007",    # log-exception-with-exc-info-false
  "LOG009",    # undocumented-warn
  "LOG015",    # root-logger-call. Requires --preview.
  "PLW2901",   # `for` loop variable overwritten by assignment target
  "PT",        # Pytest
  "PTH",       # Pathlib vs os.path usage
  "RUF008",    # Mutable dataclass default argument
  "RUF012",    # Mutable class default argument
  "RUF015",    # Unnecessary iterable allocation for first element
  "RUF016",    # Invalid index type. (Not sure if we want this)
  "RUF017",    # Quadratic list summation
  "S110",      # Try-except-pass silent suppression
  "S113",      # Request-without-timeout
  "S306",      # Suspicious-mktemp-usage
  "S506",      # Unsafe-yaml-load
  "S701",      # Jinja2-autoescape-false
  "SIM",       # Pyflake-simplify. All of them are good except SIM108, which is in `ignore` down below.
  "T100",      # `breakpoint()` call
  "W291",      # Trailing whitespace
  "W605",      # Invalid escape sequence. "\.md$" => r"\.md$",
  # "E501",      # Line too long  * Commented because `ruff format` is best-effort, not 100%, so this just creates noise
]

ignore = [
  "SIM108",    # Use ternary instead of if/else (bad advice)
  "D205",      # 1 blank line required between summary line and description (too pedantic)
]

[tool.ruff.analyze]
detect-string-imports = true
preview = true
